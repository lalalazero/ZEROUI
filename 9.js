(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{52:function(t,d,n){"use strict";n.r(d),d.default={apiContent:"<h2>API</h2>\n<p>通过设置 <code>Button</code> 的属性来产生不同的按钮样式，按钮的属性如下：</p>\n<table>\n<thead>\n<tr>\n<th>属性</th>\n<th>说明</th>\n<th>类型</th>\n<th>可选值</th>\n<th>默认值</th>\n<th>是否必填</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>按钮类型，不同类型样式不同</td>\n<td>string</td>\n<td>normal / primary / dashed / text / danger</td>\n<td>normal</td>\n<td>--</td>\n</tr>\n<tr>\n<td>icon</td>\n<td>按钮图标名字</td>\n<td>string</td>\n<td>参考内置图标</td>\n<td>--</td>\n<td>--</td>\n</tr>\n<tr>\n<td>position</td>\n<td>图标在按钮的左侧还是右侧</td>\n<td>string</td>\n<td>left / right</td>\n<td>left</td>\n<td>--</td>\n</tr>\n<tr>\n<td>loading</td>\n<td>是否加载中</td>\n<td>boolean</td>\n<td>--</td>\n<td>--</td>\n<td>--</td>\n</tr>\n<tr>\n<td>shape</td>\n<td>按钮形状</td>\n<td>string</td>\n<td>circle 或者不设置</td>\n<td>--</td>\n<td>--</td>\n</tr>\n<tr>\n<td>size</td>\n<td>按钮大小，有大中小三种尺寸，默认中</td>\n<td>string</td>\n<td>small / large / default</td>\n<td>default</td>\n<td>--</td>\n</tr>\n<tr>\n<td>disabled</td>\n<td>是否禁用</td>\n<td>boolean</td>\n<td>--</td>\n<td>--</td>\n<td>--</td>\n</tr>\n<tr>\n<td>ghost</td>\n<td>幽灵按钮，使按钮背景透明</td>\n<td>boolean</td>\n<td>--</td>\n<td>--</td>\n<td>--</td>\n</tr>\n<tr>\n<td>block</td>\n<td>块状按钮，使按钮宽度适应父节点</td>\n<td>boolean</td>\n<td>--</td>\n<td>--</td>\n<td>--</td>\n</tr>\n<tr>\n<td>onClick</td>\n<td>点击按钮时的回调</td>\n<td>(event) =&gt; void</td>\n<td>--</td>\n<td>--</td>\n<td>--</td>\n</tr>\n</tbody>\n</table>\n"}}}]);